using System.Diagnostics;
using System.IO;
using System.Windows;

namespace Antivirus
{
    public partial class FileMalware : Window
    {
        public MalwareActions MalwareAction { get; set; }
        private string filePath;

        public FileMalware(string filePath, string text)
        {
            InitializeComponent();
            textBlock.Text = text;
            this.filePath = filePath;
            MalwareAction = MalwareActions.Skip;
        }

        private void buttonSkip_Click(object sender, RoutedEventArgs e)
        {
            MalwareAction = MalwareActions.Skip;
            Close();
        }

        private void buttonAbort_Click(object sender, RoutedEventArgs e)
        {
            MalwareAction = MalwareActions.Abort;
            Close();
        }

        private void buttonDelete_Click(object sender, RoutedEventArgs e)
        {
            MalwareAction = MalwareActions.Delete;
            try
            {
                File.Delete(filePath);
            }
            catch
            {
                MessageBox.Show("Given file cannot be deleted!", "Error!", MessageBoxButton.OK, MessageBoxImage.Error);
            }
            Close();
        }

        private void buttonKill_Click(object sender, RoutedEventArgs e)
        {
            MalwareAction = MalwareActions.Kill;
            try
            {
                string processName = filePath.Substring(filePath.LastIndexOf('\\'));
                Process[] processes = Process.GetProcessesByName(processName);
                foreach (Process process in processes)
                {
                    process.Kill();
                }
                File.Delete(filePath);
            }
            catch
            {
                MessageBox.Show("Given file cannot be deleted or it's processes cannot be stopped.", "Error!", MessageBoxButton.OK, MessageBoxImage.Error);
            }
            Close();
        }

        private void buttonTrust_Click(object sender, RoutedEventArgs e)
        {
            MalwareAction = MalwareActions.Trust;
            DbWorker.InsertTrustedProcess(filePath);
            Close();
        }
    }
}
